cmake_minimum_required (VERSION 2.6) 

if(NOT CMAKE_BUILD_TYPE)
    message(STATUS "Setting build type to 'Debug' as none was specified.")
    set(CMAKE_BUILD_TYPE Debug CACHE STRING "Choose the type of build." FORCE)
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release" "MinSizeRel" "RelWithDebInfo")
endif()

list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")

project (ygopro)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

if (UNIX)
    if (APPLE)
        add_definitions ( "-DLUA_USE_MACOSX" )
    elseif (CMAKE_SYSTEM MATCHES Linux)
        add_definitions ( "-DLUA_USE_LINUX" "-march=native" )
    else ()
        add_definitions ( "-DLUA_USE_POSIX" )
    endif ()
endif ()

if (WIN32)
if (MSVC)
    add_definitions ( "-wd4996" "-D_CRT_SECURE_NO_WARNINGS" )
endif ()
endif ()

if (NOT MSVC)
    if (APPLE)
        set(CMAKE_XCODE_ATTRIBUTE_GCC_VERSION "com.apple.compilers.llvm.clang.1_0")
        set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LANGUAGE_STANDARD "c++11")
        set(CMAKE_XCODE_ATTRIBUTE_CLANG_CXX_LIBRARY "libc++")
    else ()
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
    endif ()
    set (CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -D_DEBUG")
    set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -D_DEBUG")
    add_definitions ( "-Wall" "-fexceptions" "-fomit-frame-pointer" "-fno-strict-aliasing" "-Wno-multichar" )
    if (WIN32)
        add_definitions ( "-static-libgcc" "-static-libstdc++" )
    endif ()
endif ()

include (CreateLaunchers)
include (AutoFiles)

if (MSVC)
    add_subdirectory (event)
    add_subdirectory (freetype)
    add_subdirectory (irrlicht)
    add_subdirectory (lua)
    add_subdirectory (sqlite3)
else ()
    include (FindLibEvent)
    include (FindFreetype)
    include (FindIrrlicht)
    include (FindLua52)
    include (FindSqlite3)
    include (FindOpenGL)
endif ()

add_subdirectory (ocgcore)
add_subdirectory (gframe)
