diff -urwbB irrlicht-1.8-orig/source/Irrlicht/CD3D9ShaderMaterialRenderer.cpp irrlicht-1.8/source/Irrlicht/CD3D9ShaderMaterialRenderer.cpp
--- irrlicht-1.8-orig/source/Irrlicht/CD3D9ShaderMaterialRenderer.cpp	Sat Nov  3 18:08:10 2012
+++ irrlicht-1.8/source/Irrlicht/CD3D9ShaderMaterialRenderer.cpp	Tue Jan 29 14:30:24 2013
@@ -329,7 +329,7 @@
 			strDllName += (int)D3DX_SDK_VERSION;
 			strDllName += ".dll";
 
-			HMODULE hMod = LoadLibrary(strDllName.c_str());
+			HMODULE hMod = LoadLibraryA(strDllName.c_str());
 			if (hMod)
 				 pFn = (AssembleShaderFunction)GetProcAddress(hMod, "D3DXAssembleShader");
 
@@ -389,7 +389,7 @@
 			strDllName += (int)D3DX_SDK_VERSION;
 			strDllName += ".dll";
 
-			HMODULE hMod = LoadLibrary(strDllName.c_str());
+			HMODULE hMod = LoadLibraryA(strDllName.c_str());
 			if (hMod)
 				 pFn = (AssembleShaderFromFileFunction)GetProcAddress(hMod, "D3DXAssembleShaderFromFileA");
 
@@ -450,7 +450,7 @@
 			strDllName += (int)D3DX_SDK_VERSION;
 			strDllName += ".dll";
 
-			HMODULE hMod = LoadLibrary(strDllName.c_str());
+			HMODULE hMod = LoadLibraryA(strDllName.c_str());
 			if (hMod)
 				 pFn = (D3DXCompileShaderFunction)GetProcAddress(hMod, "D3DXCompileShader");
 
@@ -510,7 +510,7 @@
 			strDllName += (int)D3DX_SDK_VERSION;
 			strDllName += ".dll";
 
-			HMODULE hMod = LoadLibrary(strDllName.c_str());
+			HMODULE hMod = LoadLibraryA(strDllName.c_str());
 			if (hMod)
 				 pFn = (D3DXCompileShaderFromFileFunction)GetProcAddress(hMod, "D3DXCompileShaderFromFileA");
 
diff -urwbB irrlicht-1.8-orig/source/Irrlicht/CIrrDeviceWin32.cpp irrlicht-1.8/source/Irrlicht/CIrrDeviceWin32.cpp
--- irrlicht-1.8-orig/source/Irrlicht/CIrrDeviceWin32.cpp	Mon Nov  5 15:14:12 2012
+++ irrlicht-1.8/source/Irrlicht/CIrrDeviceWin32.cpp	Tue Jan 29 14:31:17 2013
@@ -16,6 +16,8 @@
 #include "COSOperator.h"
 #include "dimension2d.h"
 #include "IGUISpriteBank.h"
+#include "IGUIEnvironment.h"
+#include "IGUIElement.h"
 #include <winuser.h>
 #if defined(_IRR_COMPILE_WITH_JOYSTICK_EVENTS_)
 #ifdef _IRR_COMPILE_WITH_DIRECTINPUT_JOYSTICK_
@@ -900,6 +902,33 @@
 		KEYBOARD_INPUT_HKL = GetKeyboardLayout(0);
 		KEYBOARD_INPUT_CODEPAGE = LocaleIdToCodepage( LOWORD(KEYBOARD_INPUT_HKL) );
 		return 0;
+
+	case WM_IME_STARTCOMPOSITION:
+		{
+			dev = getDeviceFromHWnd(hWnd);
+			irr::gui::IGUIElement* ele = dev->getGUIEnvironment()->getFocus();
+			if(!ele)
+				break;
+			irr::core::position2di pos = ele->getAbsolutePosition().UpperLeftCorner;
+			CANDIDATEFORM cd;
+			cd.dwIndex = 0;
+			cd.dwStyle = CFS_CANDIDATEPOS;
+			cd.ptCurrentPos.x = pos.X;
+			cd.ptCurrentPos.y = pos.Y + 10;
+			SendMessage(ImmGetDefaultIMEWnd(hWnd), WM_IME_CONTROL, IMC_SETCANDIDATEPOS, (LPARAM)&cd);
+		}
+		break;
+	case WM_IME_CHAR:
+		event.EventType = irr::EET_KEY_INPUT_EVENT;
+		event.KeyInput.PressedDown = true;
+		dev = getDeviceFromHWnd(hWnd);
+		event.KeyInput.Char = wParam;
+		event.KeyInput.Key = irr::KEY_ACCEPT;
+		event.KeyInput.Shift = 0;
+		event.KeyInput.Control = 0;
+		if (dev)
+			dev->postEventFromUser(event);
+		return 0;
 	}
 	return DefWindowProc(hWnd, message, wParam, lParam);
 }
@@ -936,7 +965,7 @@
 	// create the window if we need to and we do not use the null device
 	if (!CreationParams.WindowId && CreationParams.DriverType != video::EDT_NULL)
 	{
-		const fschar_t* ClassName = __TEXT("CIrrDeviceWin32");
+		const TCHAR* ClassName = __TEXT("CIrrDeviceWin32");
 
 		// Register Class
 		WNDCLASSEX wcex;
@@ -1303,7 +1332,7 @@
 	if (!ExternalWindow)
 	{
 		DestroyWindow(HWnd);
-		const fschar_t* ClassName = __TEXT("CIrrDeviceWin32");
+		const TCHAR* ClassName = __TEXT("CIrrDeviceWin32");
 		HINSTANCE hInstance = GetModuleHandle(0);
 		UnregisterClass(ClassName, hInstance);
 	}
@@ -1795,7 +1824,7 @@
 	{
 		// No message translation because we don't use WM_CHAR and it would conflict with our
 		// deadkey handling.
-
+		TranslateMessage(&msg);
 		if (ExternalWindow && msg.hwnd == HWnd)
 			WndProc(HWnd, msg.message, msg.wParam, msg.lParam);
 		else
diff -urwbB irrlicht-1.8-orig/source/Irrlicht/COpenGLDriver.cpp irrlicht-1.8/source/Irrlicht/COpenGLDriver.cpp
--- irrlicht-1.8-orig/source/Irrlicht/COpenGLDriver.cpp	Sat Nov  3 18:08:08 2012
+++ irrlicht-1.8/source/Irrlicht/COpenGLDriver.cpp	Tue Jan 29 14:33:13 2013
@@ -85,7 +85,7 @@
 bool COpenGLDriver::initDriver(CIrrDeviceWin32* device)
 {
 	// Create a window to test antialiasing support
-	const fschar_t* ClassName = __TEXT("GLCIrrDeviceWin32");
+	const TCHAR* ClassName = __TEXT("GLCIrrDeviceWin32");
 	HINSTANCE lhInstance = GetModuleHandle(0);
 
 	// Register Class
